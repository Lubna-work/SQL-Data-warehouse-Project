/*
===============================================================================
DDL Script: Create Gold Views
===============================================================================
Script Purpose
This script is designed to generate views for the Gold layer within the data warehouse.
The Gold layer signifies the final stage of data processing, featuring the final dimension and fact tables organized 
in a Star Schema format.

Each view within this script executes various transformations and integrates data extracted from the Silver layer. 
The result is a polished, enriched dataset that is ready for business use, 
ensuring that the information is both accurate and relevant.

Usage:
   The views created by this script can be queried directly for analytics and reporting purposes. 
   This allows users to easily access comprehensive insights, enabling data-driven decision-making 
   and facilitating in-depth analysis of business performance.
===============================================================================
*/
-- creating customer view 
IF OBJECT_ID('gold.dim_customers', 'V') IS NOT NULL
    DROP VIEW gold.dim_customers;
GO
create view gold.dim_customers as

select 
    Row_number() over (order by cst_id) AS customer_key,
	ci.cst_id AS customer_id, 
	ci.cst_key  AS customer_number,
	ci.cst_firstname AS first_name ,
	ci.cst_lastname AS last_name,
	la.cntry AS country,
	    case when ci.cst_gndr!='n/a' then ci.cst_gndr
	     else COALESCE(ei.gen, 'n/a') 
    	end AS gender ,
	ci.cst_marital_status AS marital_status ,
	ci.cst_create_date AS create_date,
	ei.bdate AS bithdate
	from silver.crm_cust_info as ci
	left join silver.erp_cust_az12 as ei
on			ci.cst_key= ei.cid 
	left join silver.erp_loc_a101 as la
on			ci.cst_key=la.cid
GO
--=============================================================================
IF OBJECT_ID('gold.dim_products', 'V') IS NOT NULL
    DROP VIEW gold.dim_products;
GO
-- creating product view 
create view gold.dim_products AS
select 
ROW_NUMBER() OVER( order by pr.prd_start_dt ,pr.prd_key ) as product_key,--surgetkey 
	pr.prd_id as product_id,
	pr.prd_key as product_number,
	pr.prd_nm as product_name,
	pr.cat_id as category_id,
	ca.cat as category,
	ca.subcat as subcategory,
	ca.maintenance as maintenance ,
	pr.prd_cost as product_cost,
	pr.prd_line as product_line,
	pr.prd_start_dt as product_start_date,
	pr.prd_end_dt prodcut_end_date
from silver.crm_prd_info as pr
left join silver.erp_px_cat_g1v2 ca
on pr.cat_id = ca.id
where prd_end_dt  is null --filter out the historical data 

GO
--=======================================================================================

IF OBJECT_ID('gold.fact_sales', 'V') IS NOT NULL
    DROP VIEW gold.fact_sales;
GO
-- creating the fact view and connecting it with the diemntions 

create view gold.fact_sales AS
select 
     sl.sls_ord_num as  order_number,
	 pr.product_key ,
	 cu.customer_key,
	 sl.sls_order_dt as order_date,
	 sl.sls_ship_dt as shipping_date,
	 sl.sls_due_dt as due_date,
	 sl.sls_price as price ,
	 sl.sls_quantity as quantity
 from silver.crm_sales_details sl
 left join gold.dim_products pr
 on sl.sls_prd_key= pr.product_number
 left join gold.dim_customers cu
 on  sl.sls_cust_id= cu.customer_id
